// Routes for wwapi.
// TODO: Try protoc-gen-doc for generating documentation.

syntax = "proto3";

option go_package = "internal/pkg/api/routes/wwapiv1;wwapiv1";

package wwapi.v1;

import "google/protobuf/empty.proto";
//import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

message NodeNames {
	repeated string nodeNames = 1;
}

message NodeField {
	//string fieldName = 1;
	string source = 1;
	string value = 2; // TODO: Variable name okay? Also this is weird since it could be a bool.
	string print = 3; // Empty values printed as -- in wwctl.
}

// NetDev is network devices (NICs) on a node.
message NetDev {
	NodeField device = 1;
	NodeField hwaddr = 2;
	NodeField ipaddr = 3;
	NodeField netmask = 4;
	NodeField gateway = 5;
	NodeField type = 6;
	NodeField onboot = 7;
	NodeField default = 8;
}

// TODO: Needed?
message NodeTags {
	repeated NodeField tags = 1;
}

message NodeInfo {
	NodeField id = 1;
	NodeField comment = 2;
	NodeField cluster = 3;
	NodeField discoverable = 4;
	NodeField container = 5;
	NodeField kernel =  6;
	NodeField kernelArgs = 7;
	NodeField systemOverlay = 8;
	NodeField runtimeOverlay = 9;
	NodeField ipxe = 10;
	NodeField init = 11;
	NodeField root = 12;
	NodeField assetKey = 13;
	NodeField ipmiIpaddr = 14;
	NodeField ipmiNetmask = 15;
	NodeField ipmiPort = 16;
	NodeField ipmiGateway = 17;
	NodeField ipmiUserName = 18;
	NodeField ipmiInterface = 19;
	NodeField ipmiPassword = 20;

	repeated string profiles = 21;
	repeated string groupProfiles = 22; // TODO: Sort out if we need this or not.

	map<string, NetDev> NetDevs = 23;
	map<string, NodeField> Tags = 24;
	map<string, NodeField> Keys = 25; // TODO: We may not need this. Tags may be it. Ask Greg.
}

message NodeListResponse {
	repeated NodeInfo nodes = 1;
}

message NodeAddParameter {
	string cluster = 1;
	bool discoverable = 2;
	string gateway = 3;
	string hwaddr = 4;
	string ipaddr = 5;
	string netdev = 6;
	string netmask = 7;
	string netname = 8;
	string type = 9;
	NodeNames nodeNames = 10;
}

message VersionResponse {
	string apiPrefix = 1;
	string apiVersion = 2;
	string warewulfVersion = 3;
}

service WWApi {

	// Nodes


	rpc NodeAdd(NodeAddParameter) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/node"
			body: "*"
		};
	}

	rpc NodeList(NodeNames) returns (NodeListResponse) {
		option (google.api.http) = {
			get: "/v1/node"
		};
	}


	// Version returns the wwapi version. This is also useful for testing if 
	// the service is up.
	rpc Version(google.protobuf.Empty) returns (VersionResponse) {
        option (google.api.http) = {
            get: "/version"
        };
    }
}
